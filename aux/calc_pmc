#!/usr/bin/env python

import os
import sys

import re
import subprocess


def parse(dic, fn):
    print(fn, file = sys.stderr)

    l = 0

    for dn in fn.split('/'):
        sp = dn.split('_')

        if len(sp) == 3:
            l = int(sp[1])
            n = int(sp[2])

    if not l:
        return

    lds = dic.setdefault(l, {})
    nds = lds.setdefault(n, {})

    res = subprocess.check_output([
        './stat',
        '-d', fn,
        'print', '.*'], text = True)

    for cs in res.split('\n'):
        sp  = cs.split()
        val = None

        if len(sp) != 2:
            continue

        nds[sp[0]] = sp[1]


def traverse(dir):
    sub = list(map(re.compile, dir.split(os.sep)))

    def iterate(top, dep):
        end = dep == len(sub) - 1

        for f in os.listdir(top):
            if sub[dep].match(f):
                cur = os.path.join(top, f)

                if end:
                    yield cur
                elif os.path.isdir(cur):
                    yield from iterate(cur, dep + 1)

    yield from iterate('.', 0)


if __name__ == '__main__':
    if len(sys.argv) < 2:
        sys.exit(f'usage: {sys.argv[0]} <dir>')

    dic = {}

    for fn in traverse(sys.argv[1]):
        parse(dic, fn)

    pat = [re.compile(p) for p in sys.argv[2:]]
    out = []

    for l, lds in dic.items():
        for n, nds in lds.items():
            for k, v in nds.items():
                if not pat or any(p.match(k) for p in pat):
                    out.append([l, n, k, v])

    for o in sorted(out):
        print(','.join(map(str, o)))
