#!/usr/bin/python

import os
import sys

import libdraw as ld


def draw(fn, ext = ''):
    if not ext:
        sys.exit(f'ERROR: ext not specified')

    if not os.path.isfile(fn):
        sys.exit(f'ERROR: {fn} not found')

    with ld.Draw(fn + '.pdf') as (f, a):
        match ext:
            case 'q1':
                cs = ['Load', 'B-tree', 'Plain list']
            case 'q2':
                cs = ['Load', '1', '8', '32', '256', 'Ideal']
            case 'q2i':
                cs = ['Load', '1', '2', '16', 'Ideal']
            case 'q4':
                cs = ['Load', 'LATR', 'Jord']

        d = ld.Data(cols = cs,
                    file = fn).unwrap()

        match ext:
            case 'q1' | 'q2' | 'q2i' | 'q4':
                for n in cs[1:]:
                    a.plot(d['Load'], d[n], label = n)

        a.format(xlabel = 'Load (KRPS)',
                 ylabel = '99th Percentile Latency (us)',
                 ymin   =  0,
                 ymax   =  900,
                 xmin   =  0,
                 xmax   =  160)

        a.hlines(140, 0, 160, lw = 1, ls = 'dotted', color = 'red')
        a.hlines(700, 0, 160, lw = 1, ls = 'dotted', color = 'red')

        a.text(2, 160, '2x SLO')
        a.text(2, 720, '10x SLO')

        match ext:
            case 'q1' | 'q4':
                nc = 2
            case 'q2' | 'q2i':
                nc = 6

        a.legend(loc = 't', ncols = nc)


if __name__ == '__main__':
    if len(sys.argv) > 1:
        draw(*sys.argv[1:])
